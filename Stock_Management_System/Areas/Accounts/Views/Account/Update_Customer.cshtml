@model Stock_Management_System.Areas.Accounts.Models.Customer_Model;
@{
    ViewData["Title"] = "Update Customer";
}


<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Update Customer</h4>
            <h6 style="font-style:initial; font-weight:bolder;color:gray">Existing Customer Update</h6>
        </div>
    </div>

    <div class="card">
        <div class="card-body">


            <form class="row g-3" id="CustomerForm" asp-action="Update_Customer_Info_Details" asp-controller="Account" onsubmit="return CheckData()" method="post">

                <!-- Customer Name -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label for="CustomerName"><span style="color: red;">*</span> Customer Name</label>
                        <input type="text" class="form-control" placeholder="Customer Name" id="CustomerName" asp-for="CustomerName" oninput="this.value = this.value.toUpperCase()">

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="CustomerName"></span>
                        <span id="newCustomerMessage" style="color:red">* Exist Customer</span>
                    </div>
                </div>

                <input type="hidden" value="@Model.CustomerId" name="CustomerId" />

                <!-- Customer Type -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label for="CustomerType"><span style="color: red;">*</span> Customer Type</label>
                        <select id="CustomerType" class="select form-control" asp-for="CustomerType">
                            <option value="" selected>-- Select Type --</option>
                            <option value="BUYER">BUYER</option>
                            <option value="SELLER">SELLER</option>
                        </select>
                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="CustomerType"></span>
                    </div>
                </div>

                <!-- Customer City -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label for="CustomerCity"><span style="color: red;">*</span> Customer City</label>
                        <input type="text" class="form-control" placeholder="City Name" id="CustomerCity" asp-for="CustomerAddress" oninput="this.value = this.value.toUpperCase()">

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="CustomerAddress"></span>
                    </div>
                </div>

                <!-- Customer Contact_No -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label><span style="color: red;">*</span> Customer No</label>
                        <input type="number" inputmode="numeric" class="form-control" placeholder="Contact No." asp-for="CustomerContact" id="CustomerContact">

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="CustomerContact"></span>
                    </div>
                </div>


                <div class="row justify-content-center">
                    <div class="col-auto text-center mb-3" style="margin-top:20px;">
                        <button type="submit" class="btn btn-success me-2">
                            <i class="fas fa-user-plus"></i>
                            Update Customer
                        </button>
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash"></i> Back To Customers 
                        </button>
                    </div>
                </div>

            </form>

        </div>
    </div>
</div>





@section Scripts {
    <script>

        function CheckData() {
            var customerName = document.getElementById('CustomerName').value;
            var customerType = document.getElementById('CustomerType').value;
            var customerCity = document.getElementById('CustomerCity').value;
            var customerContact = document.getElementById('CustomerContact').value;

            var missingFields = [];

            if (customerName === '') missingFields.push('Customer Name');
            if (customerType === '') missingFields.push('Customer Type');
            if (customerCity === '') missingFields.push('City');
            if (customerContact === '') missingFields.push('Contact Number');

            if (missingFields.length > 0) {
                toastr.error(`Please fill out the following required fields: ${missingFields.join(', ')}`, {
                    closeButton: true,
                    progressBar: true,
                    positionClass: 'toast-bottom-right',
                    preventDuplicates: true,
                    showDuration: '300',
                    hideDuration: '1000',
                    timeOut: '5000',
                    extendedTimeOut: '1000',
                    showEasing: 'swing',
                    hideEasing: 'linear',
                    showMethod: 'fadeIn',
                    hideMethod: 'fadeOut'
                });
                return false;
            } else {
                // Use SweetAlert2 to confirm with the user before submission
                confirmAddCustomer('@Url.Action("Update_Customer_Info_Details", "Account")', customerName);
                return false; // Prevent form submission until confirmation and AJAX call are completed
            }
        }


        function confirmAddCustomer(redirectUrl, customerName) {
            Swal.fire({
                title: 'Confirm Update Customer',
                text: `Are you sure you want to Update info ${customerName} Customer ?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, add it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: redirectUrl,
                        type: 'POST',
                        data: $("#CustomerForm").serialize(), // Ensure this form ID matches your form
                        success: function (response) {
                            // Assuming the server sends a JSON response with a redirectUrl field
                            sessionStorage.setItem('AddStatus', 'Customer Update successfully!');
                            window.location.href = response.redirectUrl; // Redirect using the URL from the response
                        },
                        error: function () {
                            sessionStorage.setItem('AddStatus', 'Error adding customer. Please try again.');
                            window.location.reload(); // Reload the current page on error
                        }
                    });
                }
            });
        }



    </script>
}

