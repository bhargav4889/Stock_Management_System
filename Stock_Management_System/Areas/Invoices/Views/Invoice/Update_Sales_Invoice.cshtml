@model Stock_Management_System.Areas.Invoices.Models.InvoiceModel.Sales_Invoice_Model;

@{
    ViewData["Title"] = "Update Sale Invoice";
}

<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Update Invoice</h4>
            <h6 style="font-style:initial; font-weight:bolder;color:gray">Sale Invoice Info</h6>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <form class="row g-3" asp-action="Update_Sales_Invoice_Details" asp-controller="Invoice" onsubmit="return CheckData()" method="post">

                <!-- Date -->
                <div class="col-12 col-md-4 mb-3">
                    <div class="form-floating">
                        <input type="date" class="form-control" id="datepicker" asp-for="SalesInvoiceDate">
                        <label for="datepicker" class="text-truncate"><span style="color: red;">*</span> Select a Date</label>
                        <span class="text-danger"></span>
                    </div>
                </div>


              <input type="hidden" value="@Model.SalesInvoiceId" name="SalesInvoiceId" />

                <!-- Grain Type -->
                <div class="col-12 col-md-3">
                    <div class="form-floating mb-3">
                        <select class="form-select" id="selectgrain" aria-label="graintype" asp-for="ProductId" asp-items="ViewBag.ProductsInEnglish">

                            <option selected disabled>-- Select Grain --</option>
                        </select>
                        <label for="selectgrain"><span style="color: red;">*</span> Select Type</label>
                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="ProductId"></span>
                    </div>
                </div>

                <input type="hidden" asp-for="ProductName" />



                <!-- Invoice Type -->
                <div class="col-12 col-md-4">
                    <div class="form-floating mb-3">
                        <select class="form-select" id="selectoinvoice" aria-label="selectoinvoice" asp-for="InvoiceType">
                            <option selected disabled>-- Select Invoice --</option>
                            <option value="Paid">Paid</option>
                            <option value="Pay Later">Pay Later</option>
                            <option value="Pay in Advance">Pay in Advance</option>
                            <option value="Credit">On Credit</option>
                            <option value="other">Other...</option>
                        </select>
                        <label for="selectoinvoice"><span style="color: red;">*</span> Select Type</label>
                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="InvoiceType"></span>

                    </div>
                </div>

                <!-- Broker Name -->
                <div class="col-12 col-md-4 mb-3">
                    <div class="form-floating">
                        <input type="text" class="form-control" value="@Model.BrokerName" placeholder="Brokername" id="Brokername" asp-for="BrokerName" pattern="[A-Za-z\s]*" oninput="this.value = this.value.toUpperCase()">
                        <label for="Brokername"><span style="color: black;">*</span> Broker Name</label>
                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="BrokerName"></span>
                    </div>
                </div>


                <!-- Party Name -->
                <div class="col-12 col-md-4 mb-3">
                    <div class="form-floating">
                        <input type="text" class="form-control" value="@Model.PartyName" placeholder="PartyName" id="Partyname" asp-for="PartyName" pattern="[A-Za-z\s]*" oninput="this.value = this.value.toUpperCase()">
                        <label for="Partyname"><span style="color: red;">*</span>  Party Name</label>
                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="PartyName"></span>
                    </div>
                </div>

                <!-- Party GST NO  -->
                <div class="col-12 col-md-4 mb-3">
                    <div class="form-floating">
                        <input type="text" class="form-control" value="@Model.PartyGstNo" placeholder="PartyGSTNo" id="PartyGSTNo" asp-for="PartyGstNo" pattern="[A-Za-z\s]*" oninput="this.value = this.value.toUpperCase()">
                        <label for="PartyGSTNo"><span style="color: black;">*</span> Party GST NO</label>
                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="PartyGstNo"></span>
                    </div>
                </div>

                <!-- Party Address  -->
                <div class="col-12 col-md-5 mb-3">
                    <div class="form-floating">
                        <textarea type="text" class="form-control" placeholder="PartyAddress" id="PartyAddress" asp-for="PartyAddress"  pattern="[A-Za-z\s]*" oninput="this.value = this.value.toUpperCase()"></textarea>
                        <label for="PartyAddress"><span style="color: red;">*</span> Party Address</label>
                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="PartyAddress"></span>
                    </div>
                </div>




                <!-- Product - Brand- Name  -->
                <div class="col-12 col-md-3 mb-3">
                    <div class="form-floating">
                        <input type="text" class="form-control" placeholder="ProductBrandName" value="@Model.ProductBrandName" id="ProductBrandName" asp-for="ProductBrandName" pattern="[A-Za-z\s]*" oninput="this.value = this.value.toUpperCase()">
                        <label for="ProductBrandName"><span style="color: red;">*</span> Product Brand Name </label>
                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="ProductBrandName"></span>
                    </div>
                </div>


                <!-- CGST -->
                <div class="col-12 col-md-2 mb-3">
                    <div class="form-floating">
                        <input type="number" step="0.01" class="form-control" value="@Model.CGST" placeholder="CGST" id="CGST" oninput="CalculateMethod()" asp-for="CGST">
                        <label for="CGST"><span style="color: black;">*</span> CGST(%)</label>
                    </div>
                </div>

                <!-- SGST -->
                <div class="col-12 col-md-2 mb-3">
                    <div class="form-floating">
                        <input type="number" step="0.01" class="form-control" value="@Model.SGST" placeholder="SGST" id="SGST" oninput="CalculateMethod()" asp-for="SGST">
                        <label for="SGST"><span style="color: black;">*</span> SGST(%)</label>
                    </div>
                </div>



                <input type="hidden" id="CGST_Total" asp-for="TotalCGSTPrice" />

                <input type="hidden" id="SGST_Total" asp-for="TotalSGSTPrice" />


                <!-- Bags -->
                <div class="col-12 col-md-3 mb-3">
                    <div class="form-floating">
                        <input type="number" inputmode="numeric" value="@Model.Bags" class="form-control" placeholder="Bags" id="bags" oninput="CalculateMethod()" asp-for="Bags">
                        <label for="bags"><span style="color: black;">*</span> Bags</label>
                    </div>
                </div>


                <!-- Bags Per KG -->
                <div class="col-12 col-md-3 mb-3">
                    <div class="form-floating">
                        <input type="number" inputmode="numeric" class="form-control" value="@Model.BagPerKg" placeholder="Bags per KG" id="bagsperkg" oninput="CalculateMethod()" asp-for="BagPerKg">
                        <label for="bagsperkg"><span style="color: black;">*</span> Bags Per KG</label>
                    </div>
                </div>

                <!-- Weight -->
                <div class="col-12 col-md-3 mb-3">
                    <div class="form-floating">
                        <input type="number" inputmode="numeric" class="form-control" placeholder="Weight" id="weight" asp-for="TotalWeight">
                        <label for="weight"><span style="color: red;">*</span> Weight</label>
                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="TotalWeight"></span>
                    </div>
                </div>

                <!-- Product Price -->
                <div class="col-12 col-md-3 mb-3">
                    <div class="form-floating">
                        <input type="number" inputmode="numeric" class="form-control" value="@Model.ProductPrice" placeholder="Product Price" id="productprice" oninput="CalculateMethod()" asp-for="ProductPrice">
                        <label for="productprice"><span style="color: red;">*</span> Product Price ⟨₹⟩</label>
                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="ProductPrice"></span>
                    </div>
                </div>


                <input type="hidden" id="beforetaxtotal" asp-for="WithoutGSTPrice" />

                <!-- Total Price -->
                <div class="col-12 col-md-3 mb-3">
                    <div class="form-floating">
                        <input type="number" inputmode="numeric" value="@Model.TotalPrice" class="form-control" placeholder="Total Price" id="totalprice" asp-for="TotalPrice">
                        <label for="totalprice"><span style="color: red;">*</span> Total Price ⟨₹⟩</label>
                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="TotalPrice"></span>
                    </div>
                </div>



                <!-- Vehicle Type -->
                <div class="col-12 col-md-3">
                    <div class="form-floating mb-3">
                        <select class="form-select" id="selectvehicletype" aria-label="vehicletype" asp-for="VehicleId" asp-items="ViewBag.Vehicle">
                            <option selected disabled>-- Select Vehicle --</option>
                        </select>
                        <label for="selectvehicletype"><span style="color: red;">*</span> Select Type</label>
                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="VehicleId"></span>
                    </div>
                </div>
                <input type="hidden" name="VehicleName" asp-for="VehicleName" />

                <!-- Container Number -->
                <div class="col-12 col-md-3" id="containerNumberField" style="display: none;">
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" value="@Model.ContainerNo" placeholder="Container Number" id="containerNumber" asp-for="ContainerNo">
                        <label for="containerNumber"><span style="color: red;">*</span> Container Number</label>
                        <span class="text-danger" style="color: red; font-size: 11px; font-weight: bold;" asp-validation-for="ContainerNo"></span>
                    </div>
                </div>





                <!-- Vehicle No. -->
                <div class="col-12 col-md-3 mb-3">
                    <div class="form-floating">
                        <input type="text" class="form-control" placeholder="GJ-01-MH-1234" value="@Model.VehicleNo" id="vehicleno" oninput="formatVehicleNo(this)" asp-for="VehicleNo">
                        <label for="vehicleno"><span style="color: red;">*</span> Vehicle No.</label>
                    </div>
                    <span id="error-msg" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="VehicleNo"></span>
                </div>

                <!-- Truck/Tempo Driver Name -->
                <div class="col-12 col-md-3 mb-3">
                    <div class="form-floating">
                        <input type="text" class="form-control" value="@Model.DriverName" placeholder="Driver Name" id="drivername" asp-for="DriverName" pattern="[A-Za-z\s]*" oninput="this.value = this.value.toUpperCase()">
                        <label for="drivername"><span style="color: red;">*</span> Driver Name</label>
                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="DriverName"></span>
                    </div>
                </div>






                <div class="col-12 col-md-3" id="selectoinvoicefield" style="display: none;">
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" placeholder="InvoiceType" id="invoiceTypeField" asp-for="OtherInvoiceType">
                        <label for="invoiceTypeField"><span style="color: red;">*</span> Enter Invoice Type</label>
                        <span class="text-danger" style="color: red; font-size: 11px; font-weight: bold;" asp-validation-for="OtherInvoiceType"></span>
                    </div>
                </div>




                <div class="row justify-content-center">
                    <div class="col-auto text-center mb-3" style="margin-top:20px;">
                        <button type="submit" class="btn btn-success me-2">
                            <i class="fas fa-file-invoice"></i>
                            Update Invoice
                        </button>
                        <button type="reset" class="btn btn-danger">
                            <i class="fas fa-trash"></i> Clear All
                        </button>
                    </div>
                </div>

            </form>
        </div>
    </div>
</div>


<script>


    document.getElementById('selectgrain').addEventListener('change', function () {
        var selectedOption = this.options[this.selectedIndex];
        var selectedText = selectedOption.text; // This will be "ઘઉં" for the given example
        document.querySelector('input[name="ProductName"]').value = selectedText;

        console.log(selectedText);// Update the hidden input
    });

    document.getElementById('selectvehicletype').addEventListener('change', function () {
        var selectedOption = this.options[this.selectedIndex];
        var selectedText = selectedOption.text; // This will be "ઘઉં" for the given example
        document.querySelector('input[name="VehicleName"]').value = selectedText;

        console.log(selectedText);// Update the hidden input
    });

   

    function CalculateMethod() {
        var bags = document.getElementById('bags').value.trim();
        var bagsperkg = document.getElementById('bagsperkg').value.trim();
        var weightInput = document.getElementById('weight');
        var productprice = document.getElementById('productprice').value.trim();
        var sgst = parseFloat(document.getElementById('SGST').value.trim()) || 0;
        var cgst = parseFloat(document.getElementById('CGST').value.trim()) || 0;
        var totalprice = parseFloat(document.getElementById('totalprice').value.trim()) || 0;

        // Check if both bags and bagsperkg are provided for multiplication
        var weight = (bags !== '' && bagsperkg !== '') ? bags * bagsperkg : parseFloat(weightInput.value) || 0;

        weightInput.value = weight === 0 ? '' : weight;

        var selectGrain = document.getElementById("selectgrain");
        var selectedValue = selectGrain.value;

        switch (selectedValue) {
            case "1":
            case "2":
            case "4":
            case "5":
            case "6":
            case "7":
            case "8":
                totalprice = weight * productprice / 20;
                break;

            case "3":
                totalprice = weight * productprice / 400;
                break;


        }

        document.getElementById('beforetaxtotal').value = totalprice;

        // Check if CGST and SGST are not empty or zero
        if (cgst !== 0 && sgst !== 0) {
            // Calculate CGST and IGST based on percentages
            var cgstAmount = (totalprice * cgst) / 100;
            var sgstAmount = (totalprice * sgst) / 100;

            document.getElementById('CGST_Total').value = cgstAmount;
            document.getElementById('SGST_Total').value = sgstAmount;

            // Add CGST and IGST to the total price
            totalprice += cgstAmount + sgstAmount;
        } else {
            // Set CGST and SGST totals to 0 or empty
            document.getElementById('CGST_Total').value = '';
            document.getElementById('SGST_Total').value = '';
        }

        document.getElementById('totalprice').value = totalprice === 0 ? '' : totalprice;
    }

    // Attach the event listener to the dropdown outside the function
    document.getElementById("selectgrain").addEventListener("change", CalculateMethod);

    // Attach the event listener to the input field for bags
    document.getElementById("bags")?.addEventListener("input", function () {
        if (this.value.trim() !== '') {
            CalculateMethod();
        }
    });

    // Attach the event listener to the input field for bags per kg
    document.getElementById("bagsperkg")?.addEventListener("input", function () {
        if (this.value.trim() !== '') {
            CalculateMethod();
        }
    });

    document.getElementById("SGST")?.addEventListener("input", function () {
        if (this.value.trim() !== '') {
            CalculateMethod();
        }
    });

    document.getElementById("CGST")?.addEventListener("input", function () {
        if (this.value.trim() !== '') {
            CalculateMethod();
        }
    });

    // Attach the event listener to the input field for product price
    document.getElementById("productprice").addEventListener("input", CalculateMethod);



    function CheckData() {
        var date = document.getElementById("datepicker").value;
        var grainname = document.getElementById("selectgrain").value;
        var Brokername = document.getElementById("Brokername").value;
        var Partyname = document.getElementById("Partyname").value;
        var PartyAddress = document.getElementById('PartyAddress').value;
        var PartyGstno = document.getElementById('PartyGSTNo').value;
        var bags = document.getElementById("bags").value;
        var bagperkg = document.getElementById("bagsperkg").value;
        var weight = document.getElementById("weight").value;
        var productprice = document.getElementById("productprice").value;
        var totalprice = document.getElementById("totalprice").value;
        var vehicletype = document.getElementById("selectvehicletype").value;
        var vehicleno = document.getElementById("vehicleno").value;
        var drivername = document.getElementById("drivername").value;
        var cgst = document.getElementById("CGST").value;
        var sgst = document.getElementById("SGST").value;
        var containernumber = document.getElementById('containerNumber').value;

        // Check if required fields are empty
        if (
            (grainname === '' || weight === '' || productprice === '' || totalprice === '' || vehicletype === '' || vehicleno === '' || drivername === '' || Partyname === '') &&
            (bags === '' || bagperkg === '' || Brokername === '' || PartyGstno === '' || cgst === '' || sgst === '')
        ) {
            alert("Please fill in all required data.");
            return false; // Prevent form submission
        } else {
            // Check if container number is required
            if (vehicletype === 'CONTAINER' && containernumber === '') {
                alert("Container number is required for the selected vehicle type.");
                return false; // Prevent form submission
            }

            // If required fields are filled, show confirmation
            return confirm("Are you sure this data is correct? After submission, it can't be changed.");
        }
    }






    function formatVehicleNo(input) {
        // Remove non-alphanumeric characters and convert to uppercase
        let formattedInput = input.value.replace(/[^a-zA-Z0-9]/g, '').toUpperCase();

        // Ensure the input does not exceed the expected length
        formattedInput = formattedInput.substr(0, 14);

        // Insert hyphens at specific positions
        formattedInput = formattedInput.replace(/(\w{2})(\d{2})(\w{2})(\d{4})/, '$1-$2-$3-$4');

        // Update the input field with the formatted value
        input.value = formattedInput;

        // Validate the input format
        const regex = /^([A-Z]{2})-(\d{2})-([A-Z]{2})-(\d{4})$/;
        const errorMsg = document.getElementById('error-msg');
        errorMsg.textContent = regex.test(formattedInput) ? '' : 'Invalid format. Please follow the format: GJ-12-AB-1234';
    }

    document.getElementById('selectvehicletype').addEventListener('change', function () {
        var selectedValue = this.value;
        var containerNumberField = document.getElementById('containerNumberField');

        // Check if the selected vehicle type requires entering a container number
        if (selectedValue === 'CONTAINER') { // Replace 'SomeVehicleType' with the actual value that requires a container number
            containerNumberField.style.display = 'block'; // Show the container number input field
        } else {
            containerNumberField.style.display = 'none'; // Hide the container number input field
        }
    });


    document.getElementById('selectoinvoice').addEventListener('change', function () {
        var selectedValue = this.value;
        var selectoinvoicefield = document.getElementById('selectoinvoicefield');

        if (selectedValue === 'other') {
            selectoinvoicefield.style.display = 'block'; // Show the "Invoice Type" field
        } else {
            selectoinvoicefield.style.display = 'none'; // Hide the "Invoice Type" field
        }
    });



</script>


<script>
  
    CalculateMethod();
</script>