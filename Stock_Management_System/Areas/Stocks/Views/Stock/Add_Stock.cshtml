@using System.Data;
@model Stock_Management_System.Areas.Stocks.Models.Customers_Stock_Combined_Model;
@{
    ViewData["Title"] = "Add Stock";
}


<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Stock Add</h4>
            <h6 style="font-style:initial; font-weight:bolder;color:gray">Add/Existing Stock</h6>
        </div>
    </div>

    <div class="card">
        <div class="card-body">

            <form id="AddStockForm" class="row g-3" asp-action="Add_Stock_Details" asp-controller="Stock" onsubmit="return CheckData()" method="post">


                <!-- Date -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label><span style="color: black;">*</span> Stock Date </label>
                        <input type="date" placeholder="DD-MM-YYYY" id="datepicker" asp-for="Insert_Purchase_Stock.PurchaseStockDate" class="form-control">
                    </div>
                </div>

                <!-- Stock Type -->

                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label><span style="color: black;">*</span> Select Grade</label>
                        <select class="select" id="stockgrade" aria-label="stockgrade" asp-for="Insert_Purchase_Stock.ProductGradeId" asp-items="ViewBag.ProductGrade">
                            <option selected disabled>-- Stock Grade --</option>
                        </select>


                    </div>
                </div>


                <!-- Grain Type -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label><span style="color: red;">*</span> Select Product Type</label>
                        <select class="select" id="selectgrain" aria-label="graintype" asp-for="Insert_Purchase_Stock.ProductId" asp-items="ViewBag.Products">
                            <option value="" selected disabled>-- Select Grain --</option>
                        </select>
                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="Insert_Purchase_Stock.ProductId"></span>
                    </div>
                </div>
                @*   <input type="hidden" asp-for="Purchase_Stock.ProductName" />*@


                <!-- Customer Name -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label><span style="color: red;">*</span> Customer Name</label>
                        <input type="text" class="form-control" id="Customer" placeholder="Customer Name" asp-for="Customers.CustomerName" oninput="this.value = this.value.toUpperCase()">

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="Customers.CustomerName"></span>
                        <span id="newCustomerMessage" style="color:green">* New Customer</span>
                    </div>
                </div>

                <input type="hidden" id="CustomerId" asp-for="Customers.CustomerId" />


                <!-- Customer Type -->
                <div id="newcustomertype" class="col-lg-3 col-sm-6 col-12" style="display: none;">
                    <div class="form-group">
                        <label><span style="color: red;">*</span> New Customer Type</label>
                        <input type="text" class="form-control" placeholder="Customer Type" id="cttype" asp-for="Customers.CustomerType" oninput="this.value = this.value.toUpperCase()">

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="Customers.CustomerType"></span>
                    </div>
                </div>

                <!-- Customer City -->
                <div id="newcustomercity" class="col-lg-3 col-sm-6 col-12" style="display: none;">
                    <div class="form-group">
                        <label for="ctname"><span style="color: red;">*</span> New Customer City</label>
                        <input type="text" class="form-control" placeholder="City Name" id="customercity" asp-for="Customers.CustomerAddress" oninput="this.value = this.value.toUpperCase()">

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="Customers.CustomerAddress"></span>
                    </div>
                </div>

                <!-- Customer Contact_No -->
                <div id="newcustomerphoneno" class="col-lg-3 col-sm-6 col-12" style="display: none;">
                    <div class="form-group">
                        <label for="bags"><span style="color: red;">*</span> Enter Customer No</label>
                        <input type="number" inputmode="numeric" class="form-control" placeholder="Contact No" asp-for="Customers.CustomerContact" id="contactno">

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="Customers.CustomerContact"></span>
                    </div>
                </div>


                <!-- Customer Good Taken Loaction -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label><span style="color: red;">*</span> Stock Taken Place</label>
                        <input type="text" class="form-control" placeholder="Enter Location" asp-for="Insert_Purchase_Stock.PurchaseStockLocation" id="goodtakenloc" oninput="this.value = this.value.toUpperCase()">

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="Insert_Purchase_Stock.PurchaseStockLocation"></span>
                    </div>
                </div>

                <!-- Tolat Name -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label><span style="color: black;">*</span> Tolat Name</label>
                        <input type="text" class="form-control" placeholder="Tolat Name" asp-for="Insert_Purchase_Stock.TolatName" id="tolatname" oninput="this.value = this.value.toUpperCase()">

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="Insert_Purchase_Stock.TolatName"></span>
                    </div>
                </div>

                <!-- Bags -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label><span style="color: black;">*</span> Bags</label>
                        <input type="number" inputmode="numeric" class="form-control" placeholder="Bags" id="bags" oninput="CalculateMethod()" asp-for="Insert_Purchase_Stock.Bags">

                    </div>
                </div>

                <!-- Bags Per KG -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label for="bagsperkg"><span style="color: black;">*</span> Bags Per KG</label>
                        <input type="number" inputmode="numeric" class="form-control" placeholder="Bags per KG" id="bagsperkg" oninput="CalculateMethod()" asp-for="Insert_Purchase_Stock.BagPerKg">

                    </div>
                </div>

                <!-- Weight -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label for="weight"><span style="color: red;">*</span> Weight</label>
                        <input type="number" inputmode="numeric" class="form-control" placeholder="Weight" id="weight" asp-for="Insert_Purchase_Stock.TotalWeight">

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="Insert_Purchase_Stock.TotalWeight"></span>
                    </div>
                </div>

                <!-- Product Price -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label for="productprice"><span style="color: red;">*</span> Enter Product Price ⟨₹⟩</label>
                        <input type="number" inputmode="numeric" class="form-control" placeholder="Product Price ⟨₹⟩" id="productprice" oninput="CalculateMethod()" asp-for="Insert_Purchase_Stock.ProductPrice">

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="Insert_Purchase_Stock.ProductPrice"></span>
                    </div>
                </div>

                <!-- Total Price -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label for="totalprice"><span style="color: red;">*</span> Total Price ⟨₹⟩</label>
                        <input type="number" inputmode="numeric" class="form-control" placeholder="Total Price ⟨₹⟩" id="totalprice" asp-for="Insert_Purchase_Stock.TotalPrice">

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="Insert_Purchase_Stock.TotalPrice"></span>
                    </div>
                </div>

                <!-- Vehicle Type -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label for="selectvehicletype"><span style="color: red;">*</span> Select Vehicle</label>
                        <select class="select" id="selectvehicletype" aria-label="vehicletype" asp-for="Insert_Purchase_Stock.VehicleId" asp-items="@(ViewBag.Vehicle)">
                            <option selected disabled>-- Select Vehicle --</option>
                        </select>

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="Insert_Purchase_Stock.VehicleId"></span>
                    </div>
                </div>

                <input type="hidden" asp-for="Insert_Purchase_Stock.VehicleName" />

                <!-- Vehicle No. -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label for="vehicleno"><span style="color: red;">*</span> Vehicle No.</label>
                        <input type="text" class="form-control" placeholder="GJ-01-MH-1234" id="vehicleno" asp-for="Insert_Purchase_Stock.VehicleNo" oninput="formatVehicleNo(this)">

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="Insert_Purchase_Stock.VehicleNo"></span>
                    </div>
                    <span id="error-msg" style="color: red; font-size:11px; font-weight:bold;"></span>
                </div>

                <!-- Truck/Tempo Driver Name -->
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label for="drivername"><span style="color: red;">*</span> Driver Name</label>
                        <input type="text" class="form-control" placeholder="Driver Name" asp-for="Insert_Purchase_Stock.DriverName" id="drivername" oninput="this.value = this.value.toUpperCase()">

                        <span class="text-danger" style="color: red; font-size:11px; font-weight:bold;" asp-validation-for="Insert_Purchase_Stock.DriverName"></span>
                    </div>
                </div>


                <div class="row justify-content-center">
                    <div class="col-auto text-center mb-3" style="margin-top:20px;">
                        <button type="submit" class="btn btn-success me-2">
                            <i class="fas fa-plus"></i> Add Stock
                        </button>
                        <button type="reset" class="btn btn-danger">
                            <i class="fas fa-trash"></i> Clear All
                        </button>
                    </div>  
                </div>








            </form>

        </div>
    </div>
</div>

<!-- Load jQuery -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">





@section Scripts{
    <script>




        document.getElementById('selectgrain').addEventListener('change', function () {
            var selectedOption = this.options[this.selectedIndex];
            var selectedText = selectedOption.text;
            document.querySelector('input[name="ProductName"]').value = selectedText;


        });

        document.getElementById('selectvehicletype').addEventListener('change', function () {
            var selectedOption = this.options[this.selectedIndex];
            var selectedText = selectedOption.text; // This will be "ઘઉં" for the given example
            document.querySelector('input[name="VehicleName"]').value = selectedText;


        });





        function setDateDefaultValue() {
            var today = new Date();
            var day = String(today.getDate()).padStart(2, '0');
            var month = String(today.getMonth() + 1).padStart(2, '0'); // January is 0!
            var year = today.getFullYear();
            var formattedDate = year + '-' + month + '-' + day;

            // Ensure the datepicker element exists and then set its value
            var datePicker = document.getElementById('datepicker');
            if (datePicker) {
                datePicker.value = formattedDate;
            }
        }

        // Run the function after the page has loaded to ensure the element is available
        document.addEventListener('DOMContentLoaded', function () {
            setDateDefaultValue();
        });


        window.onload = function () {
            setDateDefaultValue();
            CalculateMethod();


        };



        function CalculateMethod() {
            var bags = document.getElementById('bags').value.trim();
            var bagsperkg = document.getElementById('bagsperkg').value.trim();
            var weightInput = document.getElementById('weight');
            var productprice = document.getElementById('productprice').value.trim();
            var totalprice = 0;

            // Check if both bags and bagsperkg are provided for multiplication
            var weight = (bags !== '' && bagsperkg !== '') ? bags * bagsperkg : parseFloat(weightInput.value) || 0;

            weightInput.value = weight === 0 ? '' : weight;

            var selectGrain = document.getElementById("selectgrain");
            var selectedValue = selectGrain.value;

            switch (selectedValue) {
                case "1":
                case "2":
                case "4":
                case "5":
                case "6":
                case "7":
                case "8":
                    totalprice = weight * productprice / 20;
                    break;

                case "3":
                    totalprice = weight * productprice / 400;
                    break;

                // Add more cases if needed
            }

            document.getElementById('totalprice').value = totalprice === 0 ? '' : totalprice;
        }

        // Attach the event listener to the dropdown
        document.getElementById("selectgrain").addEventListener("change", CalculateMethod);

        // Attach the event listener to the input field for bags
        document.getElementById("bags")?.addEventListener("input", function () {
            if (this.value.trim() !== '') {
                CalculateMethod();
            }
        });

        // Attach the event listener to the input field for bags per kg
        document.getElementById("bagsperkg")?.addEventListener("input", function () {
            if (this.value.trim() !== '') {
                CalculateMethod();
            }
        });

        // Attach the event listener to the input field for product price
        document.getElementById("productprice").addEventListener("input", CalculateMethod);




        function CheckData() {
            var date = document.getElementById("datepicker").value;
            var stockgrade = document.getElementById("stockgrade").value;
            var grainname = document.getElementById("selectgrain").value;
            var farmername = document.getElementById("Customer").value;
            var bags = document.getElementById("bags").value;
            var bagperkg = document.getElementById("bagsperkg").value;
            var weight = document.getElementById("weight").value;
            var productprice = document.getElementById("productprice").value;
            var totalprice = document.getElementById("totalprice").value;
            var vehicletype = document.getElementById("selectvehicletype").value;
            var vehicleno = document.getElementById("vehicleno").value;
            var drivername = document.getElementById("drivername").value;

            // Removed check for 'tolatname'
            if (!grainname || !farmername || !weight || !productprice || !totalprice || !vehicletype || !vehicleno || !drivername) {
                toastr.error('Please fill out all required fields.', {
                    closeButton: true,
                    progressBar: true,
                    positionClass: 'toast-bottom-right',
                    preventDuplicates: true,
                    showDuration: '300',
                    hideDuration: '1000',
                    timeOut: '5000',
                    extendedTimeOut: '1000',
                    showEasing: 'swing',
                    hideEasing: 'linear',
                    showMethod: 'fadeIn',
                    hideMethod: 'fadeOut'
                });
                return false; // Prevent form submission
            } else {
                // If all fields are filled, use SweetAlert2 to confirm with the user before submission
                confirmStockAddition('@Url.Action("Add_Stock_Details", "Stock")', farmername);
                return false; // Prevent form submission until confirmation and AJAX call are completed
            }
        }



        function confirmStockAddition(addUrl, customerName) {
            Swal.fire({
                title: 'Are You Sure You Want To Add This Stock?',
                text: `${customerName}'s Stock Add?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, add it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: addUrl,  // Make sure addUrl is defined and not undefined
                        type: 'POST',
                        data: $("#AddStockForm").serialize(),  // Ensure this form ID matches your form
                        success: function (response) {
                            // Assuming the server sends a JSON response with a redirectUrl field
                            sessionStorage.setItem('AddStatus', 'Stock added successfully!');
                            window.location.href = response.redirectUrl;  // Use the redirect URL from the response
                        },
                        error: function () {
                            sessionStorage.setItem('AddStatus', 'Error adding stock. Please try again.');
                            window.location.href = response.redirectUrl;  // Use the redirect URL from the response
                        }
                    });
                }
            });
        }


        function formatVehicleNo(input) {
            // Remove non-alphanumeric characters and convert to uppercase
            let formattedInput = input.value.replace(/[^a-zA-Z0-9]/g, '').toUpperCase();

            // Ensure the input does not exceed the expected length
            formattedInput = formattedInput.substr(0, 14);

            // Insert hyphens at specific positions
            formattedInput = formattedInput.replace(/(\w{2})(\d{2})(\w{2})(\d{4})/, '$1-$2-$3-$4');

            // Update the input field with the formatted value
            input.value = formattedInput;

            // Validate the input format
            const regex = /^([A-Z]{2})-(\d{2})-([A-Z]{2})-(\d{4})$/;
            const errorMsg = document.getElementById('error-msg');
            errorMsg.textContent = regex.test(formattedInput) ? '' : 'Invalid format. Please follow the format: GJ-12-AB-1234';
        }



    </script>

    <script>
        $(document).ready(function () {
            var isSuggestionSelected = false; // Flag to indicate if a suggestion has been selected.

            // Function to show or hide new customer fields and a message.
            function toggleNewCustomerFields(show) {
                $("#newCustomerMessage").toggle(show);
                $("#newcustomertype").toggle(show);
                $("#newcustomercity").toggle(show);
                $("#newcustomerphoneno").toggle(show);
            }

            // Initially hide the new customer message and fields.
            toggleNewCustomerFields(false);

            $("#Customer").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("Get_Buyer_Customer_Data", "Stock")', // Correct URL to your controller action.
                        type: "POST",
                        dataType: "json",
                        data: { CustomerName: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.customerName + ' (' + item.customerType + ') - ' + item.customerAddress,
                                    value: item.customerName,
                                    id: item.customerId, // Customer ID.
                                    type: item.customerType // Customer Type.
                                };
                            }));
                        }
                    });
                },
                minLength: 1, // Minimum length before searching.
                response: function (event, ui) {
                    var exactMatch = ui.content.some(item => item.value.toLowerCase() === $("#Customer").val().toLowerCase());
                    toggleNewCustomerFields(!exactMatch && !isSuggestionSelected);
                },
                select: function (event, ui) {
                    isSuggestionSelected = true;
                    event.preventDefault(); // Prevent default to avoid placing label in the input.

                    $("#Customer").val(ui.item.value); // Set the input to the customer name.
                    $("#CustomerId").val(ui.item.id); // Update hidden field with selected customer ID.
                    $("#cttype").val(ui.item.type).trigger('change'); // Set the customer type and trigger change for any attached handlers.

                    toggleNewCustomerFields(false); // Hide new customer fields as a selection has been made.
                }
            });


            // Reset the flag and potentially hide new customer fields if the input is cleared or changed.
            $("#Customer").on('input', function () {
                var enteredValue = $(this).val().trim();
                if (!enteredValue) {
                    toggleNewCustomerFields(false);
                    isSuggestionSelected = false;
                } else {
                    isSuggestionSelected = false;
                    // Since we are still typing, check if any item matches exactly from the last search.
                    $("#Customer").autocomplete("search", enteredValue);
                }
            });

            // Optionally, reset the form state when the page is refreshed or navigated away.
            $(window).on('beforeunload', function () {
                toggleNewCustomerFields(false);
            });
        });
    </script>
}






